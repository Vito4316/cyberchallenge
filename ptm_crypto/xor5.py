from binascii import hexlify


def xor(a,b):
    return bytes([a[i]^b[i%len(b)] for i in range(len(a))])

ctext = b'.\x10aa \x9e\x1f]Kgw2 \x9aQTA5wf&\x94\x1f_K1aL\x0b\x94J\x13O)k1r\x8fWV\x045q*7\x88\x1fRJ#$5=\xdb[\\\x04\x0e\x0e\x07r\x9dJ_Hgg)?\x96VGI"j2u\x88\x1fDL&pf\x1b\xdcR\x13P/m(9\x92QT\x04(bL\x0b\x94J\x13S(q*6\x95\x18G\x04 a2r\x8fWZWgb4=\x96\x1fRJ>$)&\x93ZA\x04 q?X\xb2\x1fYQ4pf%\x9aQ]Egp#>\x97\x1fJK2$.=\x8c\x1fz\x03*$ 7\x9eSZJ \x0e\x01=\x8fKR\x04*e-7\xdbF\\Qgq(6\x9eM@P&j"X\xb5ZEA5$!=\x95QR\x04 m07\xdbF\\Qgq6X\xb5ZEA5$!=\x95QR\x04+a2r\x82PF\x04#k1<\xf1qVR"vf5\x94Q]Egv3<\xdb^AK2j"r\x9aQW\x04#a57\x89K\x13](qL\x1c\x9eIVVgc)<\x95^\x13I&o#r\x82PF\x04$v?X\xb5ZEA5$!=\x95QR\x044e?r\x9cP\\@%}#X\xb5ZEA5$!=\x95QR\x043a*>\xdb^\x13H.af3\x95[\x13L2v2r\x82PF.\x10aa$\x9e\x1fXJ(s(r\x9e^PLgk2:\x9eM\x13B(vf!\x94\x1f_K)cL\x0b\x94JA\x04/a\' \x8f\x18@\x04%a#<\xdb^PL.j!r\x99JG\x04>k3u\x89Z\x13P(kf!\x93F\x13P($53\x82\x1fZPMM(!\x92[V\x040af0\x94K[\x04,j)%\xdbH[E3#5r\x99ZVJgc);\x95X\x13K)\x0e\x117\xdbT]K0$2:\x9e\x1fTE*af3\x95[\x13S"#47\xdbX\\J)ef"\x97^J\x04.pL\x13\x95[\x13M!$?=\x8e\x1fRW,$+7\xdbW\\SgMa?\xdbYVA+m(5\xf1{\\J`pf&\x9eS_\x04*af+\x94J\x14V"$2=\x94\x1fQH.j"r\x8fP\x13W"aL\x1c\x9eIVVgc)<\x95^\x13C.r#r\x82PF\x042tL\x1c\x9eIVVgc)<\x95^\x13H"pf+\x94J\x13@(s(X\xb5ZEA5$!=\x95QR\x045q(r\x9aM\\Q)`f3\x95[\x13@"w# \x8f\x1fJK2\x0e\x087\x8dZA\x04 k(<\x9a\x1f^E,af+\x94J\x13G5}L\x1c\x9eIVVgc)<\x95^\x13W&}f5\x94PWF>aL\x1c\x9eIVVgc)<\x95^\x13P"h*r\x9a\x1f_M"$\'<\x9f\x1f[Q5pf+\x94J9j"r# \xdbX\\J)ef5\x92IV\x04>k3r\x8eO9j"r# \xdbX\\J)ef>\x9eK\x13](qf6\x94H].\ta07\x89\x1fTK)j\'r\x89J]\x04&v)\'\x95[\x13E)`f6\x9eLVV3$?=\x8e5}A1a4r\x9cP]J&$+3\x90Z\x13](qf1\x89F9j"r# \xdbX\\J)ef!\x9aF\x13C(k"0\x82Z9j"r# \xdbX\\J)ef&\x9eS_\x04&$*;\x9e\x1fRJ#$.\'\x89K\x13](qL\x1c\x9eIVVgc)<\x95^\x13C.r#~\xdbQVR"vf5\x94Q]Egc/$\x9e5\x1bc.r#r\x82PF\x042toX\xd3p\\Ln$\x087\x8dZA\x04 k(<\x9a\x1fTM1ajr\x95ZEA5$!=\x95QR\x04 m07\xf1\x17tM1af+\x94J\x13Q7-L\x05\x9e\x18EAgo(=\x8cQ\x13A&g.r\x94K[A5$ =\x89\x1f@Kgh)<\x9c5jK2vf:\x9e^AP`wf0\x9eZ]\x04&g.;\x95X\x13F2pf+\x94J\x14V"$2=\x94\x1f@L>$2=\xdbLR]gm2X\xb2Q@M#af%\x9e\x1fQK3lf9\x95PD\x040l\'&\xdcL\x13F"a(r\x9cPZJ $)<\xf1hV\x04,j)%\xdbK[Agc\'?\x9e\x1fRJ#$17\xdcMV\x04 k(<\x9a\x1fCH&}f;\x8f5z\x04-q5&\xdbHRJ)ef&\x9eS_\x04>k3r\x93PD\x04\x0e#+r\x9dZVH.j!X\xbcPGP&$+3\x90Z\x13](qf\'\x95[VV4p\'<\x9f5}A1a4r\x9cP]J&$!;\x8dZ\x13](qf\'\x8b5}A1a4r\x9cP]J&$*7\x8f\x1fJK2$"=\x8cQ9j"r# \xdbX\\J)ef \x8eQ\x13E5k3<\x9f\x1fRJ#$"7\x88ZAPg})\'\xf1qVR"vf5\x94Q]Egi\'9\x9e\x1fJK2$% \x825}A1a4r\x9cP]J&$53\x82\x1fTK(`$+\x9e5}A1a4r\x9cP]J&$27\x97S\x13Egh/7\xdb^]@gl3 \x8f\x1fJK2\x0e\x087\x8dZA\x04 k(<\x9a\x1fTM1af+\x94J\x13Q7\x0e\x087\x8dZA\x04 k(<\x9a\x1f_A3$?=\x8e\x1fWK0jL\x1c\x9eIVVgc)<\x95^\x13V2jf3\x89PFJ#$\'<\x9f\x1fWA4a4&\xdbF\\QMJ#$\x9eM\x13C(j(3\xdbRRO"$?=\x8e\x1fPV>\x0e\x087\x8dZA\x04 k(<\x9a\x1f@E>$!=\x94[Q]"\x0e\x087\x8dZA\x04 k(<\x9a\x1fGA+hf3\xdbSZAge(6\xdbWFV3$?=\x8e5}A1a4r\x9cP]J&$!;\x8dZ\x13](qf\'\x8b5}A1a4r\x9cP]J&$*7\x8f\x1fJK2$"=\x8cQ9j"r# \xdbX\\J)ef \x8eQ\x13E5k3<\x9f\x1fRJ#$"7\x88ZAPg})\'\xf1qVR"vf5\x94Q]Egi\'9\x9e\x1fJK2$% \x825CP*\x7f,\'\x88KlF"a(\r\x89VPO5k*>\x9e[N.'

# 
# xortool -x -p love -c 0x20 ptm_crypto/file.txt
# returns this key
key = b'$G\x04FR\xbe?3'

print(hexlify(key))

#print(xor(ctext,key))

#this prints the text of never gonna give you up (but the key found has one or two bytes wrong), then use mtp and you're done

hexctext = b'2e106161209e1f5d4b677732209a51544135776626941f5f4b31614c0b944a134f296b31728f57560435712a37881f524a2324353ddb5b5c040e0e07729d4a5f486767293f96564749226a3275881f444c2670661bdc5213502f6d28399251540428624c0b944a135328712a3695184704206132728f575a576762343d961f524a3e242926935a410420713f58b21f5951347066259a515d456770233e971f4a4b32242e3d8c1f7a032a2420379e535a4a200e013d8f4b52042a652d37db465c51677128369e4d4050266a2258b55a45413524213d95515204206d3037db465c5167713658b55a45413524213d955152042b61327282504604236b313cf17156522276663594515d456776333cdb5e414b326a22729a51570423613537894b135d28714c1c9e4956566763293c955e1349266f23728250460424763f58b55a45413524213d9551520434653f729c505c40257d2358b55a45413524213d9551520433612a3edb5e13482e616633955b134c327632728250462e106161249e1f584a287328729e5e504c676b323a9e4d134228766621941f5f4b29634c0b944a41042f6127208f1840042561233cdb5e504c2e6a2172994a47043e6b3375895a1350286b66219346135028243533821f5a504d4d2821925b560430616630944b5b042c6a2925db485b4533233572995a564a6763293b9558134b290e1137db545d4b3024323a9e1f54452a616633955b135322233437db585c4a29656622975e4a042e704c13955b134d21243f3d8e1f52572c242b37db575c53674d613fdb5956412b6d2835f17b5c4a607066269e535f042a61662b944a14562224323d941f51482e6a22728f50135722614c1c9e4956566763293c955e13432e7223728250460432744c1c9e4956566763293c955e13482270662b944a134028732858b55a45413524213d95515204357128729a4d5c5129606633955b1340227723208f1f4a4b320e08378d5a4104206b283c9a1f5e452c61662b944a1347357d4c1c9e4956566763293c955e1357267d6635945057463e614c1c9e4956566763293c955e135022682a729a1f5f4d2224273c9f1f5b513570662b944a396a22722320db585c4a29656635924956043e6b33728e4f396a22722320db585c4a2965663e9e4b135d2871663694485d2e09613037891f544b296a2772894a5d0426762927955b1345296066369e4c565633243f3d8e357d41316134729c505d4a26242b33905a135d287166318946396a22722320db585c4a296566219a461343286b2230825a396a22722320db585c4a296566269e535f0426242a3b9e1f524a23242e27894b135d28714c1c9e4956566763293c955e13432e72237edb5156522276663594515d4567632f249e351b632e7223728250460432746f58d3705c4c6e2408378d5a4104206b283c9a1f544d31616a72955a45413524213d95515204206d3037f117744d3161662b944a1351372d4c059e184541676f283d8c51134126672e72944b5b413524203d891f404b6768293c9c356a4b3276663a9e5e4150607766309e5a5d0426672e3b955813463270662b944a14562224323d941f404c3e24323ddb4c525d676d3258b251404d236166259e1f514b336c663995504404306c2726dc4c1346226128729c505a4a2024293cf16856042c6a2925db4b5b416763273f9e1f524a23243137dc4d5604206b283c9a1f4348267d663b8f357a042d713526db48524a296566269e535f043e6b3372935044040e232b729d5a56482e6a2158bc50475026242b33905a135d28716627955b56563470273c9f357d41316134729c505d4a2624213b8d5a135d287166278b357d41316134729c505d4a26242a378f1f4a4b3224223d8c51396a22722320db585c4a296566208e511345356b333c9f1f524a23242237885a4150677d2927f17156522276663594515d45676927399e1f4a4b3224252082357d41316134729c505d4a26243533821f544b2860242b9e357d41316134729c505d4a262432379753134567682f37db5e5d40676c33208f1f4a4b320e08378d5a4104206b283c9a1f544d3161662b944a1351370e08378d5a4104206b283c9a1f5f4133243f3d8e1f574b306a4c1c9e4956566763293c955e1356326a66338950464a2324273c9f1f574134613426db465c514d4a23249e4d1343286a2833db52524f22243f3d8e1f50563e0e08378d5a4104206b283c9a1f40453e24213d945b515d220e08378d5a4104206b283c9a1f47412b686633db535a4167652836db57465633243f3d8e357d41316134729c505d4a2624213b8d5a135d287166278b357d41316134729c505d4a26242a378f1f4a4b3224223d8c51396a22722320db585c4a296566208e511345356b333c9f1f524a23242237885a4150677d2927f17156522276663594515d45676927399e1f4a4b32242520823543502a7f2c27884b6c462261280d8956504f356b2a3e9e5b4e2e'

#because 2 hex = 1 byte
n = 16 

chunks_hexctext = [hexctext[i:i+n] for i in range(0, len(hexctext), n)]

f = open("xor5_chunks.txt", "w")

for chunk in chunks_hexctext:
    f.write(str(chunk)[2:-1])
    f.write("\n")


